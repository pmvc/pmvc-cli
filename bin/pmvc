#!/usr/bin/env php
<?php
# debug
ini_set("error_reporting", E_ALL);
ini_set("display_errors", true);
ini_set("display_startup_errors", true);
$cli = new PmvcGlobalCli();
if ($cli->findAutoload()) {
    $cli->init();
}

class PmvcGlobalCli
{
    private $dir;
    private $dotenv;

    public function findAutoload()
    {
        $dir = realpath('./');
        $file = $dir.'/vendor/autoload.php';
        if (!is_file($file)) {
            $dirs = explode('/',$dir);
            while(!is_file($file)&&count($dirs)){
                array_pop($dirs);
                $dir = join('/',$dirs);
                $file = $dir.'/vendor/autoload.php';
            }
        }
        if (is_file($file)) {
            include($file);
            $this->dir = $dir;
            return true;
        } else {
            echo 'Can\'t find autoload file'."\n";
            return false;
        }
    }

    public function dump($s)
    {
        $cmd = \PMVC\plug('cli');
        $cmd->dump($s);
    }

    public function init()
    {
        PMVC\Load::mvc();
        PMVC\addPlugInFolder(__DIR__.'/vendor/pmvc-plugin');
        $dir = \PMVC\realpath($this->dir);
        $dotenv = $dir.'/.env';
        $this->dotenv = $dotenv;

        // plugins 
        $plugins = [
            'dispatcher'=>null,
            'cli'=>null
        ];
        if (\PMVC\realpath($dotenv)) {
            $plugins['dotenv'] = ['envFile'=>$dotenv];
        }

        $options = [ 
           _PLUGIN=>$plugins,
           _ROUTER=>'cli',
           _ERROR_REPORTING=>E_ALL
        ];
        $controller = new \PMVC\ActionController($options);
        $verifyPlugin = true;
        array_walk($plugins, function($item, $key) use (&$verifyPlugin){
            if (!\PMVC\exists($key,'plugin')) {
                $verifyPlugin = false;
                echo 'Plugin ['.$key.'] not installed.'."\n";
            }
        });
        if (!$verifyPlugin) {
            return false;
        }
        $parent = \PMVC\getOption(_RUN_PARENT);
        $parent = str_replace(['..','.'],[$dir,$dir],$parent);
        $controller->store([
           _VIEW_ENGINE=>'cli',
           _RUN_PARENT=>$parent
        ]);
        $cliEnv = $dir.'/.env.cli';
        if (\PMVC\realpath($cliEnv)) {
            \PMVC\plug('dotenv')->toPMVC($cliEnv);
        }
        $this->welcome();
        if ($controller->plugApp(null, null, 'index_cli')){
            $controller();
        }
    }

    public function welcome()
    {
        $this->dump('Workplace: '.$this->dir);
        $this->dump('DotEnv: '.$this->dotenv);
    }
}

